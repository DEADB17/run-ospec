#!/usr/bin/env node
// -*- mode: js2; -*-
/*eslint no-extra-parens: 'off'*/

'use strict';

const fs = require('fs');
const path = require('path');
const o = require('ospec');

const DEFAULT_REGEXP = /(?:^|\/)tests\/.*\.js$/;

function traverseDirectory(startingPathname, callback) {
    let pending = 0;

    function rec(pathname) {
        const lstat = (err, stat) => {
            if (err) return callback('stat-error', pathname, (pending -= 1), err);
            if (stat &&
                stat.isDirectory() &&
                callback('readdir?', pathname, pending, stat)) { //eslint-disable-line callback-return
                return fs.readdir(pathname, readdir); // eslint-disable-line no-use-before-define
            }
            return callback('stat', pathname, (pending -= 1), stat);
        };

        const readdir = (err, paths) => {
            if (err) return callback('readdir-error', pathname, (pending -= 1), err);
            paths.forEach(it => rec(path.join(pathname, it)));
            return callback('readdir', pathname, (pending -= 1), paths);
        };

        pending += 1;
        fs.lstat(pathname, lstat);
    }

    rec(startingPathname);
}

if (require.main === module) {
    const CWD = process.cwd();
    const DEFAULT_ROOT_PATH = path.join(CWD, 'tests');
    const FILE_REGEXP_ARG = 2;
    const ROOT_PATH_ARG = 3;
    const IGNORE_DIRS = ['node_modules', '.git'];

    let fileRegexp;
    if (process.argv.length > FILE_REGEXP_ARG) {
        fileRegexp = new RegExp(process.argv[FILE_REGEXP_ARG]);
    } else {
        fileRegexp = DEFAULT_REGEXP;
    }

    let root;
    if (process.argv.length > ROOT_PATH_ARG) {
        root = process.argv[ROOT_PATH_ARG];
    } else {
        root = DEFAULT_ROOT_PATH;
    }

    const callback = (type, pathname/*, pending, it*/) => {
        switch (type) {
        case 'readdir?':
            return !(IGNORE_DIRS.includes(pathname));
        case 'stat':
            if (pathname.match(fileRegexp)) {
                const pname = path.normalize(path.join(CWD, pathname));
                require(pname); // eslint-disable-line global-require
                o.run();
            }
            break;
        default:
        }
        return false;
    };

    traverseDirectory(root, callback);
} else {
    module.exports = {
        DEFAULT_REGEXP: DEFAULT_REGEXP,
        traverseDirectory: traverseDirectory,
    };
}
